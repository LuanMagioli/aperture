syntax = "proto3";

package aperture;

// Define the Aperture service
service ConversationService {
    // Chat
    rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
    rpc streamMessages(ReceiveMessagesRequest) returns (stream ReceiveMessagesResponse);

    rpc ListCores(ListCoresRequest) returns (ListCoresResponse);
    rpc ListFacilities(ListFacilitiesRequest) returns (ListFacilitiesResponse);
    rpc ListConversations(ListConversationsRequest) returns (ListConversationsResponse);
    rpc listMessages(ListMessagesRequest) 

    // Authentication
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc logout(LogoutRequest) returns (LogoutResponse);
}


// Chat models
message Message {
    string id = 1;
    string content = 2;
    google.protobuf.Timestamp timestamp = 3;
}

message Conversation {
    string id = 1;
    string core_id = 2;
    string user_id = 3;
    repeated Message messages = 4;
}

message LoginRequest {
    string username = 1;
    string password = 2;
}

// Request and response messages for listing cores
message ListCoresRequest {
    oneof filter_criteria {
        int32 facility_id = 1;
        int32 conversation_id = 2;
    }
    string search_criteria = 3;
}

message ListCoresResponse {
    repeated Core cores = 1;
}

